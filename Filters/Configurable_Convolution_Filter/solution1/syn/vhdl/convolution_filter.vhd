-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_img_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in_img_V_TVALID : IN STD_LOGIC;
    in_img_V_TREADY : OUT STD_LOGIC;
    out_img_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_img_V_TVALID : OUT STD_LOGIC;
    out_img_V_TREADY : IN STD_LOGIC );
end;


architecture behav of convolution_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convolution_filter,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=41.666668,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.880000,HLS_SYN_LAT=310572,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=567,HLS_SYN_LUT=2568}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st5_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv19_4BD29 : STD_LOGIC_VECTOR (18 downto 0) := "1001011110100101001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_283 : STD_LOGIC_VECTOR (9 downto 0) := "1010000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv14_1E : STD_LOGIC_VECTOR (13 downto 0) := "00000000011110";
    constant ap_const_lv15_27 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100111";
    constant ap_const_lv15_30 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110000";
    constant ap_const_lv13_A : STD_LOGIC_VECTOR (12 downto 0) := "0000000001010";
    constant ap_const_lv14_13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010011";
    constant ap_const_lv14_1C : STD_LOGIC_VECTOR (13 downto 0) := "00000000011100";
    constant ap_const_lv15_26 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100110";
    constant ap_const_lv15_2F : STD_LOGIC_VECTOR (14 downto 0) := "000000000101111";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv13_9 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001001";
    constant ap_const_lv14_12 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010010";
    constant ap_const_lv14_1B : STD_LOGIC_VECTOR (13 downto 0) := "00000000011011";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv15_2E : STD_LOGIC_VECTOR (14 downto 0) := "000000000101110";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv14_11 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010001";
    constant ap_const_lv14_1A : STD_LOGIC_VECTOR (13 downto 0) := "00000000011010";
    constant ap_const_lv15_23 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100011";
    constant ap_const_lv15_25 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100101";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv13_E : STD_LOGIC_VECTOR (12 downto 0) := "0000000001110";
    constant ap_const_lv14_19 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011001";
    constant ap_const_lv15_22 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100010";
    constant ap_const_lv15_24 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100100";
    constant ap_const_lv15_2D : STD_LOGIC_VECTOR (14 downto 0) := "000000000101101";
    constant ap_const_lv13_D : STD_LOGIC_VECTOR (12 downto 0) := "0000000001101";
    constant ap_const_lv13_F : STD_LOGIC_VECTOR (12 downto 0) := "0000000001111";
    constant ap_const_lv14_18 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011000";
    constant ap_const_lv15_21 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100001";
    constant ap_const_lv15_2A : STD_LOGIC_VECTOR (14 downto 0) := "000000000101010";
    constant ap_const_lv15_2C : STD_LOGIC_VECTOR (14 downto 0) := "000000000101100";
    constant ap_const_lv14_15 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010101";
    constant ap_const_lv14_17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010111";
    constant ap_const_lv15_29 : STD_LOGIC_VECTOR (14 downto 0) := "000000000101001";
    constant ap_const_lv15_2B : STD_LOGIC_VECTOR (14 downto 0) := "000000000101011";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv13_C : STD_LOGIC_VECTOR (12 downto 0) := "0000000001100";
    constant ap_const_lv14_16 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010110";
    constant ap_const_lv14_1F : STD_LOGIC_VECTOR (13 downto 0) := "00000000011111";
    constant ap_const_lv15_28 : STD_LOGIC_VECTOR (14 downto 0) := "000000000101000";
    constant ap_const_lv15_31 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv13_B : STD_LOGIC_VECTOR (12 downto 0) := "0000000001011";
    constant ap_const_lv14_14 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010100";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_20 : BOOLEAN;
    signal window_V_0_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_0_ce0 : STD_LOGIC;
    signal line_buffer_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_0_ce1 : STD_LOGIC;
    signal line_buffer_V_0_we1 : STD_LOGIC;
    signal line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce0 : STD_LOGIC;
    signal line_buffer_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_1_ce1 : STD_LOGIC;
    signal line_buffer_V_1_we1 : STD_LOGIC;
    signal line_buffer_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_ce0 : STD_LOGIC;
    signal line_buffer_V_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_2_ce1 : STD_LOGIC;
    signal line_buffer_V_2_we1 : STD_LOGIC;
    signal line_buffer_V_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_3_ce0 : STD_LOGIC;
    signal line_buffer_V_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_3_ce1 : STD_LOGIC;
    signal line_buffer_V_3_we1 : STD_LOGIC;
    signal line_buffer_V_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_4_ce0 : STD_LOGIC;
    signal line_buffer_V_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_4_ce1 : STD_LOGIC;
    signal line_buffer_V_4_we1 : STD_LOGIC;
    signal line_buffer_V_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_5_ce0 : STD_LOGIC;
    signal line_buffer_V_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_5_ce1 : STD_LOGIC;
    signal line_buffer_V_5_we1 : STD_LOGIC;
    signal window_V_0_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal in_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_149 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_img_V_TDATA_blk_n : STD_LOGIC;
    signal or_cond1_reg_2085 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_410 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_reg_421 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_reg_432 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_flatten_reg_2017 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_181 : BOOLEAN;
    signal ap_sig_ioackin_out_img_V_TREADY : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_flatten_reg_2017_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_512_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_mid2_fu_524_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_mid2_reg_2026 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_mid2_fu_578_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2036 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_0_addr_reg_2040 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_addr_reg_2046 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_addr_reg_2052 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_3_addr_reg_2058 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_4_addr_reg_2064 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_cond_reg_2075 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_temp_V_reg_2079 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond1_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_626_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal in_temp_V_1_load_reg_2094 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_5_6_loc_1_load_reg_2100 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_4_6_loc_1_load_reg_2106 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_3_6_loc_1_load_reg_2112 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_2_6_loc_1_load_reg_2118 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_1_6_loc_1_load_reg_2124 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_0_6_loc_1_load_reg_2130 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_temp_V_1_fu_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_5_6_loc_1_fu_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_4_6_loc_1_fu_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_3_6_loc_1_fu_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_2_6_loc_1_fu_282 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_1_6_loc_1_fu_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_0_6_loc_1_fu_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ioackin_out_img_V_TREADY : STD_LOGIC := '0';
    signal exitcond_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_s_fu_532_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid1_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid1_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_550_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid2_fu_570_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_1095_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_1095_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_0_1_fu_1105_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_1_fu_1105_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_0_2_fu_1115_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_2_fu_1115_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_0_4_fu_1125_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_4_fu_1125_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_0_5_fu_1134_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_5_fu_1134_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_0_6_fu_1144_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_6_fu_1144_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_1_fu_1154_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_fu_1154_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_1_1_fu_1164_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_1_fu_1164_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_1_1_fu_1164_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_1_2_fu_1178_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_2_fu_1178_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_1_2_fu_1178_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_1_3_fu_1192_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_3_fu_1192_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_1_4_fu_1202_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_4_fu_1202_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_1_5_fu_1211_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_5_fu_1211_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_1_6_fu_1221_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_6_fu_1221_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_1_6_fu_1221_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_2_fu_1235_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_fu_1235_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_fu_1235_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_1_fu_1249_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_1_fu_1249_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_2_1_fu_1249_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_2_3_fu_1263_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_3_fu_1263_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_2_4_fu_1273_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_4_fu_1273_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_2_5_fu_1282_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_5_fu_1282_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_6_fu_1292_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_6_fu_1292_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_6_fu_1292_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_fu_1306_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_fu_1306_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_3_fu_1306_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_3_1_fu_1320_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_1_fu_1320_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_3_3_fu_1330_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_3_fu_1330_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_3_4_fu_1340_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_4_fu_1340_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_3_5_fu_1349_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_5_fu_1349_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_3_6_fu_1359_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_6_fu_1359_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_4_fu_1369_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_fu_1369_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_4_1_fu_1379_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_1_fu_1379_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_4_2_fu_1389_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_2_fu_1389_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_4_3_fu_1399_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_3_fu_1399_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_4_4_fu_1409_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_4_fu_1409_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_4_5_fu_1418_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_5_fu_1418_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_5_fu_1428_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_fu_1428_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_5_1_fu_1438_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_1_fu_1438_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_5_3_fu_1448_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_3_fu_1448_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_5_4_fu_1458_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_4_fu_1458_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_5_5_fu_1467_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_5_fu_1467_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_5_6_fu_1477_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_6_fu_1477_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_6_fu_1487_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_fu_1487_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_6_1_fu_1497_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_1_fu_1497_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_6_2_fu_1507_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_2_fu_1507_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_6_3_fu_1517_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_3_fu_1517_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_6_5_fu_1532_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_5_fu_1532_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_6_5_fu_1532_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_6_6_fu_1546_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_6_fu_1546_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_6_6_fu_1546_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_0_2_fu_1115_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_0_1_fu_1105_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_fu_1095_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp5_fu_1556_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_66_fu_1562_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_67_fu_1566_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_6_fu_1144_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_0_5_fu_1134_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_0_4_fu_1125_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp7_fu_1576_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_68_fu_1582_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_1586_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_cast_fu_1570_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_cast_fu_1590_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_1184_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_1170_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_fu_1154_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_70_fu_1608_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp10_fu_1602_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_5_fu_1211_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_1_4_fu_1202_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_1_3_fu_1192_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp12_fu_1618_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_71_fu_1624_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_1628_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp9_cast_fu_1612_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp11_cast_fu_1632_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_1596_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_1638_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_1255_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_1241_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_1227_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp16_fu_1650_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_4_fu_1273_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_2_3_fu_1263_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp18_fu_1662_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_73_fu_1668_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_1674_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp15_fu_1656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp17_cast_fu_1678_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_1312_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_1298_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_5_fu_1282_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_75_fu_1696_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp21_fu_1690_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_3_fu_1330_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_1_fu_1320_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_76_fu_1706_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_fu_1710_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_fu_1716_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_1720_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp20_cast_fu_1700_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp22_cast_fu_1726_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp14_fu_1684_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp19_fu_1732_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_1644_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp13_fu_1738_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_6_fu_1359_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_5_fu_1349_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_4_fu_1340_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp28_fu_1750_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp27_fu_1756_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_4_2_fu_1389_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_4_1_fu_1379_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_4_fu_1369_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_81_fu_1766_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_fu_1770_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_83_fu_1774_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_fu_1778_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_1762_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp29_cast_fu_1784_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_5_fu_1418_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_4_4_fu_1409_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_4_3_fu_1399_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp33_fu_1796_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp32_fu_1802_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_5_1_fu_1438_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_5_fu_1428_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp35_fu_1812_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_86_fu_1818_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_87_fu_1824_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_fu_1808_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp34_cast_fu_1828_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp26_fu_1790_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp31_fu_1834_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_4_fu_1458_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_5_3_fu_1448_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp39_fu_1846_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_88_fu_1852_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_89_fu_1858_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_fu_1487_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_5_6_fu_1477_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_5_5_fu_1467_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_90_fu_1868_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_fu_1872_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_fu_1876_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_fu_1880_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp38_cast_fu_1862_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp40_cast_fu_1886_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_3_fu_1517_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_6_2_fu_1507_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_6_1_fu_1497_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp44_fu_1898_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_94_fu_1904_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_fu_1908_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_fu_1538_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_1523_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_fu_1552_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp46_fu_1918_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp47_fu_1924_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp43_cast_fu_1912_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp45_fu_1930_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp37_fu_1892_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp42_fu_1936_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp25_fu_1840_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp36_fu_1942_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_fu_1948_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_1744_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_2 : STD_LOGIC;
    signal ap_sig_1152 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_0_1_fu_1105_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_0_2_fu_1115_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_0_4_fu_1125_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_0_5_fu_1134_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_0_6_fu_1144_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_1_1_fu_1164_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_1_2_fu_1178_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_1_3_fu_1192_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_1_4_fu_1202_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_1_5_fu_1211_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_1_6_fu_1221_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_1_fu_1154_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_1_fu_1249_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_2_3_fu_1263_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_2_4_fu_1273_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_2_5_fu_1282_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_6_fu_1292_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_fu_1235_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_1_fu_1320_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_3_fu_1330_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_4_fu_1340_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_5_fu_1349_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_6_fu_1359_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_3_fu_1306_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_4_1_fu_1379_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_4_2_fu_1389_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_4_3_fu_1399_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_4_4_fu_1409_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_4_5_fu_1418_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_4_fu_1369_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_5_1_fu_1438_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_5_3_fu_1448_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_5_4_fu_1458_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_5_5_fu_1467_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_5_6_fu_1477_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_5_fu_1428_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_6_1_fu_1497_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_6_2_fu_1507_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_6_3_fu_1517_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_6_5_fu_1532_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_6_6_fu_1546_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_6_fu_1487_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_fu_1095_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_1256 : BOOLEAN;
    signal ap_sig_172 : BOOLEAN;

    component convolution_filter_mul_8ns_6ns_14_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component convolution_filter_mul_8ns_7ns_15_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component convolution_filter_mul_8ns_5ns_13_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component convolution_filter_mul_8ns_4ns_12_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component convolution_filter_mul_8ns_3ns_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component convolution_filter_line_buffer_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    line_buffer_V_0_U : component convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_0_address0,
        ce0 => line_buffer_V_0_ce0,
        q0 => line_buffer_V_0_q0,
        address1 => line_buffer_V_0_addr_reg_2040,
        ce1 => line_buffer_V_0_ce1,
        we1 => line_buffer_V_0_we1,
        d1 => line_buffer_V_1_q0);

    line_buffer_V_1_U : component convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_1_address0,
        ce0 => line_buffer_V_1_ce0,
        q0 => line_buffer_V_1_q0,
        address1 => line_buffer_V_1_addr_reg_2046,
        ce1 => line_buffer_V_1_ce1,
        we1 => line_buffer_V_1_we1,
        d1 => line_buffer_V_2_q0);

    line_buffer_V_2_U : component convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_2_address0,
        ce0 => line_buffer_V_2_ce0,
        q0 => line_buffer_V_2_q0,
        address1 => line_buffer_V_2_addr_reg_2052,
        ce1 => line_buffer_V_2_ce1,
        we1 => line_buffer_V_2_we1,
        d1 => line_buffer_V_3_q0);

    line_buffer_V_3_U : component convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_3_address0,
        ce0 => line_buffer_V_3_ce0,
        q0 => line_buffer_V_3_q0,
        address1 => line_buffer_V_3_addr_reg_2058,
        ce1 => line_buffer_V_3_ce1,
        we1 => line_buffer_V_3_we1,
        d1 => line_buffer_V_4_q0);

    line_buffer_V_4_U : component convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_4_address0,
        ce0 => line_buffer_V_4_ce0,
        q0 => line_buffer_V_4_q0,
        address1 => line_buffer_V_4_addr_reg_2064,
        ce1 => line_buffer_V_4_ce1,
        we1 => line_buffer_V_4_we1,
        d1 => line_buffer_V_5_q0);

    line_buffer_V_5_U : component convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_5_address0,
        ce0 => line_buffer_V_5_ce0,
        q0 => line_buffer_V_5_q0,
        address1 => line_buffer_V_5_address1,
        ce1 => line_buffer_V_5_ce1,
        we1 => line_buffer_V_5_we1,
        d1 => in_temp_V_reg_2079);

    convolution_filter_mul_8ns_6ns_14_1_U1 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_fu_1095_p0,
        din1 => r_V_fu_1095_p1,
        dout => r_V_fu_1095_p2);

    convolution_filter_mul_8ns_7ns_15_1_U2 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_0_1_fu_1105_p0,
        din1 => r_V_0_1_fu_1105_p1,
        dout => r_V_0_1_fu_1105_p2);

    convolution_filter_mul_8ns_7ns_15_1_U3 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_0_2_fu_1115_p0,
        din1 => r_V_0_2_fu_1115_p1,
        dout => r_V_0_2_fu_1115_p2);

    convolution_filter_mul_8ns_5ns_13_1_U4 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_0_4_fu_1125_p0,
        din1 => r_V_0_4_fu_1125_p1,
        dout => r_V_0_4_fu_1125_p2);

    convolution_filter_mul_8ns_6ns_14_1_U5 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_0_5_fu_1134_p0,
        din1 => r_V_0_5_fu_1134_p1,
        dout => r_V_0_5_fu_1134_p2);

    convolution_filter_mul_8ns_6ns_14_1_U6 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_0_6_fu_1144_p0,
        din1 => r_V_0_6_fu_1144_p1,
        dout => r_V_0_6_fu_1144_p2);

    convolution_filter_mul_8ns_7ns_15_1_U7 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_1_fu_1154_p0,
        din1 => r_V_1_fu_1154_p1,
        dout => r_V_1_fu_1154_p2);

    convolution_filter_mul_8ns_7ns_15_1_U8 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_1_1_fu_1164_p0,
        din1 => r_V_1_1_fu_1164_p1,
        dout => r_V_1_1_fu_1164_p2);

    convolution_filter_mul_8ns_4ns_12_1_U9 : component convolution_filter_mul_8ns_4ns_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        dout_WIDTH => 12)
    port map (
        din0 => r_V_1_2_fu_1178_p0,
        din1 => r_V_1_2_fu_1178_p1,
        dout => r_V_1_2_fu_1178_p2);

    convolution_filter_mul_8ns_5ns_13_1_U10 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_1_3_fu_1192_p0,
        din1 => r_V_1_3_fu_1192_p1,
        dout => r_V_1_3_fu_1192_p2);

    convolution_filter_mul_8ns_6ns_14_1_U11 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_1_4_fu_1202_p0,
        din1 => r_V_1_4_fu_1202_p1,
        dout => r_V_1_4_fu_1202_p2);

    convolution_filter_mul_8ns_6ns_14_1_U12 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_1_5_fu_1211_p0,
        din1 => r_V_1_5_fu_1211_p1,
        dout => r_V_1_5_fu_1211_p2);

    convolution_filter_mul_8ns_6ns_14_1_U13 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_1_6_fu_1221_p0,
        din1 => r_V_1_6_fu_1221_p1,
        dout => r_V_1_6_fu_1221_p2);

    convolution_filter_mul_8ns_7ns_15_1_U14 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_2_fu_1235_p0,
        din1 => r_V_2_fu_1235_p1,
        dout => r_V_2_fu_1235_p2);

    convolution_filter_mul_8ns_4ns_12_1_U15 : component convolution_filter_mul_8ns_4ns_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        dout_WIDTH => 12)
    port map (
        din0 => r_V_2_1_fu_1249_p0,
        din1 => r_V_2_1_fu_1249_p1,
        dout => r_V_2_1_fu_1249_p2);

    convolution_filter_mul_8ns_6ns_14_1_U16 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_2_3_fu_1263_p0,
        din1 => r_V_2_3_fu_1263_p1,
        dout => r_V_2_3_fu_1263_p2);

    convolution_filter_mul_8ns_6ns_14_1_U17 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_2_4_fu_1273_p0,
        din1 => r_V_2_4_fu_1273_p1,
        dout => r_V_2_4_fu_1273_p2);

    convolution_filter_mul_8ns_7ns_15_1_U18 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_2_5_fu_1282_p0,
        din1 => r_V_2_5_fu_1282_p1,
        dout => r_V_2_5_fu_1282_p2);

    convolution_filter_mul_8ns_7ns_15_1_U19 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_2_6_fu_1292_p0,
        din1 => r_V_2_6_fu_1292_p1,
        dout => r_V_2_6_fu_1292_p2);

    convolution_filter_mul_8ns_4ns_12_1_U20 : component convolution_filter_mul_8ns_4ns_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        dout_WIDTH => 12)
    port map (
        din0 => r_V_3_fu_1306_p0,
        din1 => r_V_3_fu_1306_p1,
        dout => r_V_3_fu_1306_p2);

    convolution_filter_mul_8ns_5ns_13_1_U21 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_3_1_fu_1320_p0,
        din1 => r_V_3_1_fu_1320_p1,
        dout => r_V_3_1_fu_1320_p2);

    convolution_filter_mul_8ns_6ns_14_1_U22 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_3_3_fu_1330_p0,
        din1 => r_V_3_3_fu_1330_p1,
        dout => r_V_3_3_fu_1330_p2);

    convolution_filter_mul_8ns_7ns_15_1_U23 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_3_4_fu_1340_p0,
        din1 => r_V_3_4_fu_1340_p1,
        dout => r_V_3_4_fu_1340_p2);

    convolution_filter_mul_8ns_7ns_15_1_U24 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_3_5_fu_1349_p0,
        din1 => r_V_3_5_fu_1349_p1,
        dout => r_V_3_5_fu_1349_p2);

    convolution_filter_mul_8ns_7ns_15_1_U25 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_3_6_fu_1359_p0,
        din1 => r_V_3_6_fu_1359_p1,
        dout => r_V_3_6_fu_1359_p2);

    convolution_filter_mul_8ns_5ns_13_1_U26 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_4_fu_1369_p0,
        din1 => r_V_4_fu_1369_p1,
        dout => r_V_4_fu_1369_p2);

    convolution_filter_mul_8ns_5ns_13_1_U27 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_4_1_fu_1379_p0,
        din1 => r_V_4_1_fu_1379_p1,
        dout => r_V_4_1_fu_1379_p2);

    convolution_filter_mul_8ns_6ns_14_1_U28 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_4_2_fu_1389_p0,
        din1 => r_V_4_2_fu_1389_p1,
        dout => r_V_4_2_fu_1389_p2);

    convolution_filter_mul_8ns_7ns_15_1_U29 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_4_3_fu_1399_p0,
        din1 => r_V_4_3_fu_1399_p1,
        dout => r_V_4_3_fu_1399_p2);

    convolution_filter_mul_8ns_7ns_15_1_U30 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_4_4_fu_1409_p0,
        din1 => r_V_4_4_fu_1409_p1,
        dout => r_V_4_4_fu_1409_p2);

    convolution_filter_mul_8ns_7ns_15_1_U31 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_4_5_fu_1418_p0,
        din1 => r_V_4_5_fu_1418_p1,
        dout => r_V_4_5_fu_1418_p2);

    convolution_filter_mul_8ns_6ns_14_1_U32 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_5_fu_1428_p0,
        din1 => r_V_5_fu_1428_p1,
        dout => r_V_5_fu_1428_p2);

    convolution_filter_mul_8ns_6ns_14_1_U33 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_5_1_fu_1438_p0,
        din1 => r_V_5_1_fu_1438_p1,
        dout => r_V_5_1_fu_1438_p2);

    convolution_filter_mul_8ns_7ns_15_1_U34 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_5_3_fu_1448_p0,
        din1 => r_V_5_3_fu_1448_p1,
        dout => r_V_5_3_fu_1448_p2);

    convolution_filter_mul_8ns_7ns_15_1_U35 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_5_4_fu_1458_p0,
        din1 => r_V_5_4_fu_1458_p1,
        dout => r_V_5_4_fu_1458_p2);

    convolution_filter_mul_8ns_3ns_11_1_U36 : component convolution_filter_mul_8ns_3ns_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        dout_WIDTH => 11)
    port map (
        din0 => r_V_5_5_fu_1467_p0,
        din1 => r_V_5_5_fu_1467_p1,
        dout => r_V_5_5_fu_1467_p2);

    convolution_filter_mul_8ns_5ns_13_1_U37 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_5_6_fu_1477_p0,
        din1 => r_V_5_6_fu_1477_p1,
        dout => r_V_5_6_fu_1477_p2);

    convolution_filter_mul_8ns_6ns_14_1_U38 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_6_fu_1487_p0,
        din1 => r_V_6_fu_1487_p1,
        dout => r_V_6_fu_1487_p2);

    convolution_filter_mul_8ns_6ns_14_1_U39 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_6_1_fu_1497_p0,
        din1 => r_V_6_1_fu_1497_p1,
        dout => r_V_6_1_fu_1497_p2);

    convolution_filter_mul_8ns_7ns_15_1_U40 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_6_2_fu_1507_p0,
        din1 => r_V_6_2_fu_1507_p1,
        dout => r_V_6_2_fu_1507_p2);

    convolution_filter_mul_8ns_7ns_15_1_U41 : component convolution_filter_mul_8ns_7ns_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_6_3_fu_1517_p0,
        din1 => r_V_6_3_fu_1517_p1,
        dout => r_V_6_3_fu_1517_p2);

    convolution_filter_mul_8ns_5ns_13_1_U42 : component convolution_filter_mul_8ns_5ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_6_5_fu_1532_p0,
        din1 => r_V_6_5_fu_1532_p1,
        dout => r_V_6_5_fu_1532_p2);

    convolution_filter_mul_8ns_6ns_14_1_U43 : component convolution_filter_mul_8ns_6ns_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_6_6_fu_1546_p0,
        din1 => r_V_6_6_fu_1546_p1,
        dout => r_V_6_6_fu_1546_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_out_img_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_172) then
                    if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                        ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_1256) then 
                        ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((exitcond_flatten_fu_506_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                col_reg_432 <= col_1_fu_626_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                col_reg_432 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    in_temp_V_1_fu_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = or_cond_reg_2075)))) then 
                in_temp_V_1_fu_266 <= in_temp_V_reg_2079;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                in_temp_V_1_fu_266 <= window_V_6_6;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                indvar_flatten_reg_410 <= indvar_flatten_next_fu_512_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_410 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    row_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                row_reg_421 <= row_mid2_fu_578_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                row_reg_421 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    window_V_0_6_loc_1_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then 
                window_V_0_6_loc_1_fu_290 <= line_buffer_V_0_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                window_V_0_6_loc_1_fu_290 <= window_V_0_6;
            end if; 
        end if;
    end process;

    window_V_1_6_loc_1_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then 
                window_V_1_6_loc_1_fu_286 <= line_buffer_V_1_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                window_V_1_6_loc_1_fu_286 <= window_V_1_6;
            end if; 
        end if;
    end process;

    window_V_2_6_loc_1_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then 
                window_V_2_6_loc_1_fu_282 <= line_buffer_V_2_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                window_V_2_6_loc_1_fu_282 <= window_V_2_6;
            end if; 
        end if;
    end process;

    window_V_3_6_loc_1_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then 
                window_V_3_6_loc_1_fu_278 <= line_buffer_V_3_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                window_V_3_6_loc_1_fu_278 <= window_V_3_6;
            end if; 
        end if;
    end process;

    window_V_4_6_loc_1_fu_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then 
                window_V_4_6_loc_1_fu_274 <= line_buffer_V_4_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                window_V_4_6_loc_1_fu_274 <= window_V_4_6;
            end if; 
        end if;
    end process;

    window_V_5_6_loc_1_fu_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then 
                window_V_5_6_loc_1_fu_270 <= line_buffer_V_5_q0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                window_V_5_6_loc_1_fu_270 <= window_V_5_6;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                ap_reg_ppstg_exitcond_flatten_reg_2017_pp0_iter1 <= exitcond_flatten_reg_2017;
                ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1 <= or_cond1_reg_2085;
                exitcond_flatten_reg_2017 <= exitcond_flatten_fu_506_p2;
                in_temp_V_1_load_reg_2094 <= in_temp_V_1_fu_266;
                window_V_0_6_loc_1_load_reg_2130 <= window_V_0_6_loc_1_fu_290;
                window_V_1_6_loc_1_load_reg_2124 <= window_V_1_6_loc_1_fu_286;
                window_V_2_6_loc_1_load_reg_2118 <= window_V_2_6_loc_1_fu_282;
                window_V_3_6_loc_1_load_reg_2112 <= window_V_3_6_loc_1_fu_278;
                window_V_4_6_loc_1_load_reg_2106 <= window_V_4_6_loc_1_fu_274;
                window_V_5_6_loc_1_load_reg_2100 <= window_V_5_6_loc_1_fu_270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                col_mid2_reg_2026 <= col_mid2_fu_524_p3;
                or_cond1_reg_2085 <= or_cond1_fu_620_p2;
                or_cond_reg_2075 <= or_cond_fu_602_p2;
                tmp_4_reg_2036 <= tmp_4_fu_586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_602_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                in_temp_V_reg_2079 <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = tmp_4_fu_586_p2)))) then
                line_buffer_V_0_addr_reg_2040 <= tmp_6_fu_592_p1(10 - 1 downto 0);
                line_buffer_V_1_addr_reg_2046 <= tmp_6_fu_592_p1(10 - 1 downto 0);
                line_buffer_V_2_addr_reg_2052 <= tmp_6_fu_592_p1(10 - 1 downto 0);
                line_buffer_V_3_addr_reg_2058 <= tmp_6_fu_592_p1(10 - 1 downto 0);
                line_buffer_V_4_addr_reg_2064 <= tmp_6_fu_592_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_2017_pp0_iter1))) then
                window_V_0_1 <= window_V_0_2;
                window_V_0_2 <= window_V_0_3;
                window_V_0_3 <= window_V_0_4;
                window_V_0_4 <= window_V_0_5;
                window_V_0_5 <= window_V_0_6_loc_1_load_reg_2130;
                window_V_1_1 <= window_V_1_2;
                window_V_1_2 <= window_V_1_3;
                window_V_1_3 <= window_V_1_4;
                window_V_1_4 <= window_V_1_5;
                window_V_1_5 <= window_V_1_6_loc_1_load_reg_2124;
                window_V_2_1 <= window_V_2_2;
                window_V_2_2 <= window_V_2_3;
                window_V_2_3 <= window_V_2_4;
                window_V_2_4 <= window_V_2_5;
                window_V_2_5 <= window_V_2_6_loc_1_load_reg_2118;
                window_V_3_1 <= window_V_3_2;
                window_V_3_2 <= window_V_3_3;
                window_V_3_3 <= window_V_3_4;
                window_V_3_4 <= window_V_3_5;
                window_V_3_5 <= window_V_3_6_loc_1_load_reg_2112;
                window_V_4_1 <= window_V_4_2;
                window_V_4_2 <= window_V_4_3;
                window_V_4_3 <= window_V_4_4;
                window_V_4_4 <= window_V_4_5;
                window_V_4_5 <= window_V_4_6_loc_1_load_reg_2106;
                window_V_5_1 <= window_V_5_2;
                window_V_5_2 <= window_V_5_3;
                window_V_5_3 <= window_V_5_4;
                window_V_5_4 <= window_V_5_5;
                window_V_5_5 <= window_V_5_6_loc_1_load_reg_2100;
                window_V_6_1 <= window_V_6_2;
                window_V_6_2 <= window_V_6_3;
                window_V_6_3 <= window_V_6_4;
                window_V_6_4 <= window_V_6_5;
                window_V_6_5 <= in_temp_V_1_load_reg_2094;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036)))) then
                window_V_0_6 <= line_buffer_V_0_q0;
                window_V_1_6 <= line_buffer_V_1_q0;
                window_V_2_6 <= line_buffer_V_2_q0;
                window_V_3_6 <= line_buffer_V_3_q0;
                window_V_4_6 <= line_buffer_V_4_q0;
                window_V_5_6 <= line_buffer_V_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_602_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                window_V_6_6 <= in_img_V_TDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not(((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st5_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st5_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st5_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_1152_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1152 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_1256_assign_proc : process(out_img_V_TREADY, ap_reg_ppiten_pp0_it0, ap_sig_181)
    begin
                ap_sig_1256 <= (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181)) and (ap_const_logic_1 = out_img_V_TREADY));
    end process;


    ap_sig_149_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_149 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_172_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)
    begin
                ap_sig_172 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)));
    end process;


    ap_sig_181_assign_proc : process(in_img_V_TVALID, exitcond_flatten_fu_506_p2, or_cond_fu_602_p2)
    begin
                ap_sig_181 <= ((exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_602_p2)) and (in_img_V_TVALID = ap_const_logic_0));
    end process;


    ap_sig_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_149)
    begin
        if (ap_sig_149) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_20)
    begin
        if (ap_sig_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_2_assign_proc : process(ap_sig_1152)
    begin
        if (ap_sig_1152) then 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_out_img_V_TREADY_assign_proc : process(out_img_V_TREADY, ap_reg_ioackin_out_img_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_out_img_V_TREADY)) then 
            ap_sig_ioackin_out_img_V_TREADY <= out_img_V_TREADY;
        else 
            ap_sig_ioackin_out_img_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    col_1_fu_626_p2 <= std_logic_vector(unsigned(col_mid2_fu_524_p3) + unsigned(ap_const_lv10_1));
    col_mid2_fu_524_p3 <= 
        ap_const_lv10_0 when (exitcond_fu_518_p2(0) = '1') else 
        col_reg_432;
    exitcond_flatten_fu_506_p2 <= "1" when (indvar_flatten_reg_410 = ap_const_lv19_4BD29) else "0";
    exitcond_fu_518_p2 <= "1" when (col_reg_432 = ap_const_lv10_283) else "0";

    in_img_V_TDATA_blk_n_assign_proc : process(in_img_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, exitcond_flatten_fu_506_p2, or_cond_fu_602_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_602_p2)))) then 
            in_img_V_TDATA_blk_n <= in_img_V_TVALID;
        else 
            in_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_img_V_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, exitcond_flatten_fu_506_p2, or_cond_fu_602_p2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_602_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            in_img_V_TREADY <= ap_const_logic_1;
        else 
            in_img_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_512_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_410) + unsigned(ap_const_lv19_1));
    line_buffer_V_0_address0 <= tmp_6_fu_592_p1(10 - 1 downto 0);

    line_buffer_V_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, exitcond_flatten_reg_2017, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_2036)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036))))) then 
            line_buffer_V_0_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_address0 <= tmp_6_fu_592_p1(10 - 1 downto 0);

    line_buffer_V_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, exitcond_flatten_reg_2017, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_2036)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036))))) then 
            line_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_address0 <= tmp_6_fu_592_p1(10 - 1 downto 0);

    line_buffer_V_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, exitcond_flatten_reg_2017, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_2036)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036))))) then 
            line_buffer_V_2_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_3_address0 <= tmp_6_fu_592_p1(10 - 1 downto 0);

    line_buffer_V_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_3_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_3_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_3_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, exitcond_flatten_reg_2017, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_2036)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036))))) then 
            line_buffer_V_3_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_4_address0 <= tmp_6_fu_592_p1(10 - 1 downto 0);

    line_buffer_V_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_4_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_4_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_4_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_4_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, exitcond_flatten_reg_2017, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_2036)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = tmp_4_reg_2036))))) then 
            line_buffer_V_4_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_5_address0 <= tmp_6_fu_592_p1(10 - 1 downto 0);
    line_buffer_V_5_address1 <= tmp_8_fu_719_p1(10 - 1 downto 0);

    line_buffer_V_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_5_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_5_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_5_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_5_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, exitcond_flatten_reg_2017, ap_sig_181, ap_sig_ioackin_out_img_V_TREADY, or_cond_reg_2075)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and (ap_const_lv1_0 = exitcond_flatten_reg_2017) and not((ap_const_lv1_0 = or_cond_reg_2075))))) then 
            line_buffer_V_5_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_fu_620_p2 <= (tmp_2_mid2_fu_570_p3 and tmp_9_fu_614_p2);
    or_cond_fu_602_p2 <= (tmp_4_fu_586_p2 and tmp_mid2_fu_550_p3);
    out_img_V_TDATA <= std_logic_vector(unsigned(tmp24_fu_1948_p2) + unsigned(tmp1_fu_1744_p2));

    out_img_V_TDATA_blk_n_assign_proc : process(out_img_V_TREADY, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)))) then 
            out_img_V_TDATA_blk_n <= out_img_V_TREADY;
        else 
            out_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_img_V_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1, ap_sig_181, ap_reg_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_2085_pp0_iter1)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_181)) and (ap_const_logic_0 = ap_reg_ioackin_out_img_V_TREADY))) then 
            out_img_V_TVALID <= ap_const_logic_1;
        else 
            out_img_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_1_fu_1105_p0 <= r_V_0_1_fu_1105_p00(8 - 1 downto 0);
    r_V_0_1_fu_1105_p00 <= std_logic_vector(resize(unsigned(window_V_0_2),15));
    r_V_0_1_fu_1105_p1 <= ap_const_lv15_27(7 - 1 downto 0);
    r_V_0_2_fu_1115_p0 <= r_V_0_2_fu_1115_p00(8 - 1 downto 0);
    r_V_0_2_fu_1115_p00 <= std_logic_vector(resize(unsigned(window_V_0_3),15));
    r_V_0_2_fu_1115_p1 <= ap_const_lv15_30(7 - 1 downto 0);
    r_V_0_4_fu_1125_p0 <= r_V_0_4_fu_1125_p00(8 - 1 downto 0);
    r_V_0_4_fu_1125_p00 <= std_logic_vector(resize(unsigned(window_V_0_5),13));
    r_V_0_4_fu_1125_p1 <= ap_const_lv13_A(5 - 1 downto 0);
    r_V_0_5_fu_1134_p0 <= r_V_0_5_fu_1134_p00(8 - 1 downto 0);
    r_V_0_5_fu_1134_p00 <= std_logic_vector(resize(unsigned(window_V_0_6_loc_1_load_reg_2130),14));
    r_V_0_5_fu_1134_p1 <= ap_const_lv14_13(6 - 1 downto 0);
    r_V_0_6_fu_1144_p0 <= r_V_0_6_fu_1144_p00(8 - 1 downto 0);
    r_V_0_6_fu_1144_p00 <= std_logic_vector(resize(unsigned(window_V_0_6_loc_1_fu_290),14));
    r_V_0_6_fu_1144_p1 <= ap_const_lv14_1C(6 - 1 downto 0);
    r_V_1_1_fu_1164_p0 <= r_V_1_1_fu_1164_p00(8 - 1 downto 0);
    r_V_1_1_fu_1164_p00 <= std_logic_vector(resize(unsigned(window_V_1_2),15));
    r_V_1_1_fu_1164_p1 <= ap_const_lv15_2F(7 - 1 downto 0);
    r_V_1_2_fu_1178_p0 <= r_V_1_2_fu_1178_p00(8 - 1 downto 0);
    r_V_1_2_fu_1178_p00 <= std_logic_vector(resize(unsigned(window_V_1_3),12));
    r_V_1_2_fu_1178_p1 <= ap_const_lv12_7(4 - 1 downto 0);
    r_V_1_3_fu_1192_p0 <= r_V_1_3_fu_1192_p00(8 - 1 downto 0);
    r_V_1_3_fu_1192_p00 <= std_logic_vector(resize(unsigned(window_V_1_4),13));
    r_V_1_3_fu_1192_p1 <= ap_const_lv13_9(5 - 1 downto 0);
    r_V_1_4_fu_1202_p0 <= r_V_1_4_fu_1202_p00(8 - 1 downto 0);
    r_V_1_4_fu_1202_p00 <= std_logic_vector(resize(unsigned(window_V_1_5),14));
    r_V_1_4_fu_1202_p1 <= ap_const_lv14_12(6 - 1 downto 0);
    r_V_1_5_fu_1211_p0 <= r_V_1_5_fu_1211_p00(8 - 1 downto 0);
    r_V_1_5_fu_1211_p00 <= std_logic_vector(resize(unsigned(window_V_1_6_loc_1_load_reg_2124),14));
    r_V_1_5_fu_1211_p1 <= ap_const_lv14_1B(6 - 1 downto 0);
    r_V_1_6_fu_1221_p0 <= r_V_1_6_fu_1221_p00(8 - 1 downto 0);
    r_V_1_6_fu_1221_p00 <= std_logic_vector(resize(unsigned(window_V_1_6_loc_1_fu_286),14));
    r_V_1_6_fu_1221_p1 <= ap_const_lv14_1D(6 - 1 downto 0);
    r_V_1_fu_1154_p0 <= r_V_1_fu_1154_p00(8 - 1 downto 0);
    r_V_1_fu_1154_p00 <= std_logic_vector(resize(unsigned(window_V_1_1),15));
    r_V_1_fu_1154_p1 <= ap_const_lv15_26(7 - 1 downto 0);
    r_V_2_1_fu_1249_p0 <= r_V_2_1_fu_1249_p00(8 - 1 downto 0);
    r_V_2_1_fu_1249_p00 <= std_logic_vector(resize(unsigned(window_V_2_2),12));
    r_V_2_1_fu_1249_p1 <= ap_const_lv12_6(4 - 1 downto 0);
    r_V_2_3_fu_1263_p0 <= r_V_2_3_fu_1263_p00(8 - 1 downto 0);
    r_V_2_3_fu_1263_p00 <= std_logic_vector(resize(unsigned(window_V_2_4),14));
    r_V_2_3_fu_1263_p1 <= ap_const_lv14_11(6 - 1 downto 0);
    r_V_2_4_fu_1273_p0 <= r_V_2_4_fu_1273_p00(8 - 1 downto 0);
    r_V_2_4_fu_1273_p00 <= std_logic_vector(resize(unsigned(window_V_2_5),14));
    r_V_2_4_fu_1273_p1 <= ap_const_lv14_1A(6 - 1 downto 0);
    r_V_2_5_fu_1282_p0 <= r_V_2_5_fu_1282_p00(8 - 1 downto 0);
    r_V_2_5_fu_1282_p00 <= std_logic_vector(resize(unsigned(window_V_2_6_loc_1_load_reg_2118),15));
    r_V_2_5_fu_1282_p1 <= ap_const_lv15_23(7 - 1 downto 0);
    r_V_2_6_fu_1292_p0 <= r_V_2_6_fu_1292_p00(8 - 1 downto 0);
    r_V_2_6_fu_1292_p00 <= std_logic_vector(resize(unsigned(window_V_2_6_loc_1_fu_282),15));
    r_V_2_6_fu_1292_p1 <= ap_const_lv15_25(7 - 1 downto 0);
    r_V_2_fu_1235_p0 <= r_V_2_fu_1235_p00(8 - 1 downto 0);
    r_V_2_fu_1235_p00 <= std_logic_vector(resize(unsigned(window_V_2_1),15));
    r_V_2_fu_1235_p1 <= ap_const_lv15_2E(7 - 1 downto 0);
    r_V_3_1_fu_1320_p0 <= r_V_3_1_fu_1320_p00(8 - 1 downto 0);
    r_V_3_1_fu_1320_p00 <= std_logic_vector(resize(unsigned(window_V_3_2),13));
    r_V_3_1_fu_1320_p1 <= ap_const_lv13_E(5 - 1 downto 0);
    r_V_3_3_fu_1330_p0 <= r_V_3_3_fu_1330_p00(8 - 1 downto 0);
    r_V_3_3_fu_1330_p00 <= std_logic_vector(resize(unsigned(window_V_3_4),14));
    r_V_3_3_fu_1330_p1 <= ap_const_lv14_19(6 - 1 downto 0);
    r_V_3_4_fu_1340_p0 <= r_V_3_4_fu_1340_p00(8 - 1 downto 0);
    r_V_3_4_fu_1340_p00 <= std_logic_vector(resize(unsigned(window_V_3_5),15));
    r_V_3_4_fu_1340_p1 <= ap_const_lv15_22(7 - 1 downto 0);
    r_V_3_5_fu_1349_p0 <= r_V_3_5_fu_1349_p00(8 - 1 downto 0);
    r_V_3_5_fu_1349_p00 <= std_logic_vector(resize(unsigned(window_V_3_6_loc_1_load_reg_2112),15));
    r_V_3_5_fu_1349_p1 <= ap_const_lv15_24(7 - 1 downto 0);
    r_V_3_6_fu_1359_p0 <= r_V_3_6_fu_1359_p00(8 - 1 downto 0);
    r_V_3_6_fu_1359_p00 <= std_logic_vector(resize(unsigned(window_V_3_6_loc_1_fu_278),15));
    r_V_3_6_fu_1359_p1 <= ap_const_lv15_2D(7 - 1 downto 0);
    r_V_3_fu_1306_p0 <= r_V_3_fu_1306_p00(8 - 1 downto 0);
    r_V_3_fu_1306_p00 <= std_logic_vector(resize(unsigned(window_V_3_1),12));
    r_V_3_fu_1306_p1 <= ap_const_lv12_5(4 - 1 downto 0);
    r_V_4_1_fu_1379_p0 <= r_V_4_1_fu_1379_p00(8 - 1 downto 0);
    r_V_4_1_fu_1379_p00 <= std_logic_vector(resize(unsigned(window_V_4_2),13));
    r_V_4_1_fu_1379_p1 <= ap_const_lv13_F(5 - 1 downto 0);
    r_V_4_2_fu_1389_p0 <= r_V_4_2_fu_1389_p00(8 - 1 downto 0);
    r_V_4_2_fu_1389_p00 <= std_logic_vector(resize(unsigned(window_V_4_3),14));
    r_V_4_2_fu_1389_p1 <= ap_const_lv14_18(6 - 1 downto 0);
    r_V_4_3_fu_1399_p0 <= r_V_4_3_fu_1399_p00(8 - 1 downto 0);
    r_V_4_3_fu_1399_p00 <= std_logic_vector(resize(unsigned(window_V_4_4),15));
    r_V_4_3_fu_1399_p1 <= ap_const_lv15_21(7 - 1 downto 0);
    r_V_4_4_fu_1409_p0 <= r_V_4_4_fu_1409_p00(8 - 1 downto 0);
    r_V_4_4_fu_1409_p00 <= std_logic_vector(resize(unsigned(window_V_4_5),15));
    r_V_4_4_fu_1409_p1 <= ap_const_lv15_2A(7 - 1 downto 0);
    r_V_4_5_fu_1418_p0 <= r_V_4_5_fu_1418_p00(8 - 1 downto 0);
    r_V_4_5_fu_1418_p00 <= std_logic_vector(resize(unsigned(window_V_4_6_loc_1_load_reg_2106),15));
    r_V_4_5_fu_1418_p1 <= ap_const_lv15_2C(7 - 1 downto 0);
    r_V_4_fu_1369_p0 <= r_V_4_fu_1369_p00(8 - 1 downto 0);
    r_V_4_fu_1369_p00 <= std_logic_vector(resize(unsigned(window_V_4_1),13));
    r_V_4_fu_1369_p1 <= ap_const_lv13_D(5 - 1 downto 0);
    r_V_5_1_fu_1438_p0 <= r_V_5_1_fu_1438_p00(8 - 1 downto 0);
    r_V_5_1_fu_1438_p00 <= std_logic_vector(resize(unsigned(window_V_5_2),14));
    r_V_5_1_fu_1438_p1 <= ap_const_lv14_17(6 - 1 downto 0);
    r_V_5_3_fu_1448_p0 <= r_V_5_3_fu_1448_p00(8 - 1 downto 0);
    r_V_5_3_fu_1448_p00 <= std_logic_vector(resize(unsigned(window_V_5_4),15));
    r_V_5_3_fu_1448_p1 <= ap_const_lv15_29(7 - 1 downto 0);
    r_V_5_4_fu_1458_p0 <= r_V_5_4_fu_1458_p00(8 - 1 downto 0);
    r_V_5_4_fu_1458_p00 <= std_logic_vector(resize(unsigned(window_V_5_5),15));
    r_V_5_4_fu_1458_p1 <= ap_const_lv15_2B(7 - 1 downto 0);
    r_V_5_5_fu_1467_p0 <= r_V_5_5_fu_1467_p00(8 - 1 downto 0);
    r_V_5_5_fu_1467_p00 <= std_logic_vector(resize(unsigned(window_V_5_6_loc_1_load_reg_2100),11));
    r_V_5_5_fu_1467_p1 <= ap_const_lv11_3(3 - 1 downto 0);
    r_V_5_6_fu_1477_p0 <= r_V_5_6_fu_1477_p00(8 - 1 downto 0);
    r_V_5_6_fu_1477_p00 <= std_logic_vector(resize(unsigned(window_V_5_6_loc_1_fu_270),13));
    r_V_5_6_fu_1477_p1 <= ap_const_lv13_C(5 - 1 downto 0);
    r_V_5_fu_1428_p0 <= r_V_5_fu_1428_p00(8 - 1 downto 0);
    r_V_5_fu_1428_p00 <= std_logic_vector(resize(unsigned(window_V_5_1),14));
    r_V_5_fu_1428_p1 <= ap_const_lv14_15(6 - 1 downto 0);
    r_V_6_1_fu_1497_p0 <= r_V_6_1_fu_1497_p00(8 - 1 downto 0);
    r_V_6_1_fu_1497_p00 <= std_logic_vector(resize(unsigned(window_V_6_2),14));
    r_V_6_1_fu_1497_p1 <= ap_const_lv14_1F(6 - 1 downto 0);
    r_V_6_2_fu_1507_p0 <= r_V_6_2_fu_1507_p00(8 - 1 downto 0);
    r_V_6_2_fu_1507_p00 <= std_logic_vector(resize(unsigned(window_V_6_3),15));
    r_V_6_2_fu_1507_p1 <= ap_const_lv15_28(7 - 1 downto 0);
    r_V_6_3_fu_1517_p0 <= r_V_6_3_fu_1517_p00(8 - 1 downto 0);
    r_V_6_3_fu_1517_p00 <= std_logic_vector(resize(unsigned(window_V_6_4),15));
    r_V_6_3_fu_1517_p1 <= ap_const_lv15_31(7 - 1 downto 0);
    r_V_6_5_fu_1532_p0 <= r_V_6_5_fu_1532_p00(8 - 1 downto 0);
    r_V_6_5_fu_1532_p00 <= std_logic_vector(resize(unsigned(in_temp_V_1_load_reg_2094),13));
    r_V_6_5_fu_1532_p1 <= ap_const_lv13_B(5 - 1 downto 0);
    r_V_6_6_fu_1546_p0 <= r_V_6_6_fu_1546_p00(8 - 1 downto 0);
    r_V_6_6_fu_1546_p00 <= std_logic_vector(resize(unsigned(in_temp_V_1_fu_266),14));
    r_V_6_6_fu_1546_p1 <= ap_const_lv14_14(6 - 1 downto 0);
    r_V_6_fu_1487_p0 <= r_V_6_fu_1487_p00(8 - 1 downto 0);
    r_V_6_fu_1487_p00 <= std_logic_vector(resize(unsigned(window_V_6_1),14));
    r_V_6_fu_1487_p1 <= ap_const_lv14_16(6 - 1 downto 0);
    r_V_fu_1095_p0 <= r_V_fu_1095_p00(8 - 1 downto 0);
    r_V_fu_1095_p00 <= std_logic_vector(resize(unsigned(window_V_0_1),14));
    r_V_fu_1095_p1 <= ap_const_lv14_1E(6 - 1 downto 0);
    row_mid2_fu_578_p3 <= 
        row_s_fu_532_p2 when (exitcond_fu_518_p2(0) = '1') else 
        row_reg_421;
    row_s_fu_532_p2 <= std_logic_vector(unsigned(row_reg_421) + unsigned(ap_const_lv9_1));
    tmp10_fu_1602_p2 <= std_logic_vector(unsigned(tmp_57_fu_1184_p1) + unsigned(tmp_56_fu_1170_p1));
    tmp11_cast_fu_1632_p2 <= std_logic_vector(unsigned(tmp_71_fu_1624_p1) + unsigned(tmp_72_fu_1628_p1));
    tmp12_fu_1618_p2 <= std_logic_vector(unsigned(r_V_1_5_fu_1211_p2) + unsigned(r_V_1_4_fu_1202_p2));
    tmp13_fu_1738_p2 <= std_logic_vector(unsigned(tmp14_fu_1684_p2) + unsigned(tmp19_fu_1732_p2));
    tmp14_fu_1684_p2 <= std_logic_vector(unsigned(tmp15_fu_1656_p2) + unsigned(tmp17_cast_fu_1678_p2));
    tmp15_fu_1656_p2 <= std_logic_vector(unsigned(tmp_58_fu_1227_p1) + unsigned(tmp16_fu_1650_p2));
    tmp16_fu_1650_p2 <= std_logic_vector(unsigned(tmp_60_fu_1255_p1) + unsigned(tmp_59_fu_1241_p1));
    tmp17_cast_fu_1678_p2 <= std_logic_vector(unsigned(tmp_73_fu_1668_p2) + unsigned(tmp_74_fu_1674_p1));
    tmp18_fu_1662_p2 <= std_logic_vector(unsigned(r_V_2_4_fu_1273_p2) + unsigned(r_V_2_3_fu_1263_p2));
    tmp19_fu_1732_p2 <= std_logic_vector(unsigned(tmp20_cast_fu_1700_p2) + unsigned(tmp22_cast_fu_1726_p2));
    tmp1_fu_1744_p2 <= std_logic_vector(unsigned(tmp2_fu_1644_p2) + unsigned(tmp13_fu_1738_p2));
    tmp20_cast_fu_1700_p2 <= std_logic_vector(unsigned(tmp_75_fu_1696_p1) + unsigned(tmp21_fu_1690_p2));
    tmp21_fu_1690_p2 <= std_logic_vector(unsigned(tmp_62_fu_1312_p1) + unsigned(tmp_61_fu_1298_p1));
    tmp22_cast_fu_1726_p2 <= std_logic_vector(unsigned(tmp_78_fu_1716_p1) + unsigned(tmp_79_fu_1720_p2));
    tmp24_fu_1948_p2 <= std_logic_vector(unsigned(tmp25_fu_1840_p2) + unsigned(tmp36_fu_1942_p2));
    tmp25_fu_1840_p2 <= std_logic_vector(unsigned(tmp26_fu_1790_p2) + unsigned(tmp31_fu_1834_p2));
    tmp26_fu_1790_p2 <= std_logic_vector(unsigned(tmp_80_fu_1762_p1) + unsigned(tmp29_cast_fu_1784_p2));
    tmp27_fu_1756_p2 <= std_logic_vector(unsigned(r_V_3_4_fu_1340_p2) + unsigned(tmp28_fu_1750_p2));
    tmp28_fu_1750_p2 <= std_logic_vector(unsigned(r_V_3_6_fu_1359_p2) + unsigned(r_V_3_5_fu_1349_p2));
    tmp29_cast_fu_1784_p2 <= std_logic_vector(unsigned(tmp_83_fu_1774_p1) + unsigned(tmp_84_fu_1778_p2));
    tmp2_fu_1644_p2 <= std_logic_vector(unsigned(tmp3_fu_1596_p2) + unsigned(tmp8_fu_1638_p2));
    tmp31_fu_1834_p2 <= std_logic_vector(unsigned(tmp_85_fu_1808_p1) + unsigned(tmp34_cast_fu_1828_p2));
    tmp32_fu_1802_p2 <= std_logic_vector(unsigned(r_V_4_3_fu_1399_p2) + unsigned(tmp33_fu_1796_p2));
    tmp33_fu_1796_p2 <= std_logic_vector(unsigned(r_V_4_5_fu_1418_p2) + unsigned(r_V_4_4_fu_1409_p2));
    tmp34_cast_fu_1828_p2 <= std_logic_vector(unsigned(tmp_86_fu_1818_p2) + unsigned(tmp_87_fu_1824_p1));
    tmp35_fu_1812_p2 <= std_logic_vector(unsigned(r_V_5_1_fu_1438_p2) + unsigned(r_V_5_fu_1428_p2));
    tmp36_fu_1942_p2 <= std_logic_vector(unsigned(tmp37_fu_1892_p2) + unsigned(tmp42_fu_1936_p2));
    tmp37_fu_1892_p2 <= std_logic_vector(unsigned(tmp38_cast_fu_1862_p2) + unsigned(tmp40_cast_fu_1886_p2));
    tmp38_cast_fu_1862_p2 <= std_logic_vector(unsigned(tmp_88_fu_1852_p2) + unsigned(tmp_89_fu_1858_p1));
    tmp39_fu_1846_p2 <= std_logic_vector(unsigned(r_V_5_4_fu_1458_p2) + unsigned(r_V_5_3_fu_1448_p2));
    tmp3_fu_1596_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_1570_p2) + unsigned(tmp6_cast_fu_1590_p2));
    tmp40_cast_fu_1886_p2 <= std_logic_vector(unsigned(tmp_92_fu_1876_p1) + unsigned(tmp_93_fu_1880_p2));
    tmp42_fu_1936_p2 <= std_logic_vector(unsigned(tmp43_cast_fu_1912_p2) + unsigned(tmp45_fu_1930_p2));
    tmp43_cast_fu_1912_p2 <= std_logic_vector(unsigned(tmp_94_fu_1904_p1) + unsigned(tmp_95_fu_1908_p1));
    tmp44_fu_1898_p2 <= std_logic_vector(unsigned(r_V_6_3_fu_1517_p2) + unsigned(r_V_6_2_fu_1507_p2));
    tmp45_fu_1930_p2 <= std_logic_vector(unsigned(tmp46_fu_1918_p2) + unsigned(tmp47_fu_1924_p2));
    tmp46_fu_1918_p2 <= std_logic_vector(unsigned(tmp_64_fu_1538_p1) + unsigned(tmp_63_fu_1523_p2));
    tmp47_fu_1924_p2 <= std_logic_vector(unsigned(window_V_0_4) + unsigned(tmp_65_fu_1552_p1));
    tmp4_cast_fu_1570_p2 <= std_logic_vector(unsigned(tmp_66_fu_1562_p1) + unsigned(tmp_67_fu_1566_p1));
    tmp5_fu_1556_p2 <= std_logic_vector(unsigned(r_V_0_2_fu_1115_p2) + unsigned(r_V_0_1_fu_1105_p2));
    tmp6_cast_fu_1590_p2 <= std_logic_vector(unsigned(tmp_68_fu_1582_p1) + unsigned(tmp_69_fu_1586_p1));
    tmp7_fu_1576_p2 <= std_logic_vector(unsigned(r_V_0_6_fu_1144_p2) + unsigned(r_V_0_5_fu_1134_p2));
    tmp8_fu_1638_p2 <= std_logic_vector(unsigned(tmp9_cast_fu_1612_p2) + unsigned(tmp11_cast_fu_1632_p2));
    tmp9_cast_fu_1612_p2 <= std_logic_vector(unsigned(tmp_70_fu_1608_p1) + unsigned(tmp10_fu_1602_p2));
    tmp_2_fu_564_p2 <= "1" when (unsigned(row_reg_421) > unsigned(ap_const_lv9_2)) else "0";
    tmp_2_mid1_fu_558_p2 <= "1" when (unsigned(row_s_fu_532_p2) > unsigned(ap_const_lv9_2)) else "0";
    tmp_2_mid2_fu_570_p3 <= 
        tmp_2_mid1_fu_558_p2 when (exitcond_fu_518_p2(0) = '1') else 
        tmp_2_fu_564_p2;
    tmp_4_fu_586_p2 <= "1" when (unsigned(col_mid2_fu_524_p3) < unsigned(ap_const_lv10_280)) else "0";
    tmp_56_fu_1170_p1 <= r_V_1_1_fu_1164_p2(8 - 1 downto 0);
    tmp_57_fu_1184_p1 <= r_V_1_2_fu_1178_p2(8 - 1 downto 0);
    tmp_58_fu_1227_p1 <= r_V_1_6_fu_1221_p2(8 - 1 downto 0);
    tmp_59_fu_1241_p1 <= r_V_2_fu_1235_p2(8 - 1 downto 0);
    tmp_60_fu_1255_p1 <= r_V_2_1_fu_1249_p2(8 - 1 downto 0);
    tmp_61_fu_1298_p1 <= r_V_2_6_fu_1292_p2(8 - 1 downto 0);
    tmp_62_fu_1312_p1 <= r_V_3_fu_1306_p2(8 - 1 downto 0);
    tmp_63_fu_1523_p2 <= std_logic_vector(shift_left(unsigned(window_V_6_5),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_64_fu_1538_p1 <= r_V_6_5_fu_1532_p2(8 - 1 downto 0);
    tmp_65_fu_1552_p1 <= r_V_6_6_fu_1546_p2(8 - 1 downto 0);
    tmp_66_fu_1562_p1 <= r_V_fu_1095_p2(8 - 1 downto 0);
    tmp_67_fu_1566_p1 <= tmp5_fu_1556_p2(8 - 1 downto 0);
    tmp_68_fu_1582_p1 <= r_V_0_4_fu_1125_p2(8 - 1 downto 0);
    tmp_69_fu_1586_p1 <= tmp7_fu_1576_p2(8 - 1 downto 0);
    tmp_6_fu_592_p1 <= std_logic_vector(resize(unsigned(col_mid2_fu_524_p3),64));
    tmp_70_fu_1608_p1 <= r_V_1_fu_1154_p2(8 - 1 downto 0);
    tmp_71_fu_1624_p1 <= r_V_1_3_fu_1192_p2(8 - 1 downto 0);
    tmp_72_fu_1628_p1 <= tmp12_fu_1618_p2(8 - 1 downto 0);
    tmp_73_fu_1668_p2 <= std_logic_vector(shift_left(unsigned(window_V_2_3),to_integer(unsigned('0' & ap_const_lv8_3(8-1 downto 0)))));
    tmp_74_fu_1674_p1 <= tmp18_fu_1662_p2(8 - 1 downto 0);
    tmp_75_fu_1696_p1 <= r_V_2_5_fu_1282_p2(8 - 1 downto 0);
    tmp_76_fu_1706_p1 <= r_V_3_3_fu_1330_p2(8 - 1 downto 0);
    tmp_77_fu_1710_p2 <= std_logic_vector(shift_left(unsigned(window_V_3_3),to_integer(unsigned('0' & ap_const_lv8_4(8-1 downto 0)))));
    tmp_78_fu_1716_p1 <= r_V_3_1_fu_1320_p2(8 - 1 downto 0);
    tmp_79_fu_1720_p2 <= std_logic_vector(unsigned(tmp_76_fu_1706_p1) + unsigned(tmp_77_fu_1710_p2));
    tmp_80_fu_1762_p1 <= tmp27_fu_1756_p2(8 - 1 downto 0);
    tmp_81_fu_1766_p1 <= r_V_4_2_fu_1389_p2(8 - 1 downto 0);
    tmp_82_fu_1770_p1 <= r_V_4_1_fu_1379_p2(8 - 1 downto 0);
    tmp_83_fu_1774_p1 <= r_V_4_fu_1369_p2(8 - 1 downto 0);
    tmp_84_fu_1778_p2 <= std_logic_vector(unsigned(tmp_81_fu_1766_p1) + unsigned(tmp_82_fu_1770_p1));
    tmp_85_fu_1808_p1 <= tmp32_fu_1802_p2(8 - 1 downto 0);
    tmp_86_fu_1818_p2 <= std_logic_vector(shift_left(unsigned(window_V_4_6_loc_1_fu_274),to_integer(unsigned('0' & ap_const_lv8_2(8-1 downto 0)))));
    tmp_87_fu_1824_p1 <= tmp35_fu_1812_p2(8 - 1 downto 0);
    tmp_88_fu_1852_p2 <= std_logic_vector(shift_left(unsigned(window_V_5_3),to_integer(unsigned('0' & ap_const_lv8_5(8-1 downto 0)))));
    tmp_89_fu_1858_p1 <= tmp39_fu_1846_p2(8 - 1 downto 0);
    tmp_8_fu_719_p1 <= std_logic_vector(resize(unsigned(col_mid2_reg_2026),64));
    tmp_90_fu_1868_p1 <= r_V_6_fu_1487_p2(8 - 1 downto 0);
    tmp_91_fu_1872_p1 <= r_V_5_6_fu_1477_p2(8 - 1 downto 0);
    tmp_92_fu_1876_p1 <= r_V_5_5_fu_1467_p2(8 - 1 downto 0);
    tmp_93_fu_1880_p2 <= std_logic_vector(unsigned(tmp_90_fu_1868_p1) + unsigned(tmp_91_fu_1872_p1));
    tmp_94_fu_1904_p1 <= r_V_6_1_fu_1497_p2(8 - 1 downto 0);
    tmp_95_fu_1908_p1 <= tmp44_fu_1898_p2(8 - 1 downto 0);
    tmp_9_fu_614_p2 <= "1" when (unsigned(col_mid2_fu_524_p3) > unsigned(ap_const_lv10_2)) else "0";
    tmp_fu_544_p2 <= "1" when (unsigned(row_reg_421) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_mid1_fu_538_p2 <= "1" when (unsigned(row_s_fu_532_p2) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_mid2_fu_550_p3 <= 
        tmp_mid1_fu_538_p2 when (exitcond_fu_518_p2(0) = '1') else 
        tmp_fu_544_p2;
end behav;
