-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sep_convolution_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_img_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in_img_V_TVALID : IN STD_LOGIC;
    in_img_V_TREADY : OUT STD_LOGIC;
    out_img_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_img_V_TVALID : OUT STD_LOGIC;
    out_img_V_TREADY : IN STD_LOGIC );
end;


architecture behav of sep_convolution_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sep_convolution_filter,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=41.666668,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.940000,HLS_SYN_LAT=308324,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=6,HLS_SYN_FF=135,HLS_SYN_LUT=275}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st5_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv19_4B461 : STD_LOGIC_VECTOR (18 downto 0) := "1001011010001100001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_281 : STD_LOGIC_VECTOR (9 downto 0) := "1010000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv48_1020409 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000001000000100000010000001001";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv24_47 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000111";
    constant ap_const_lv23_7FFFEA : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111101010";
    constant ap_const_lv16_FF8E : STD_LOGIC_VECTOR (15 downto 0) := "1111111110001110";
    constant ap_const_lv16_43 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_20 : BOOLEAN;
    signal line_buffer_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_0_ce0 : STD_LOGIC;
    signal line_buffer_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_0_ce1 : STD_LOGIC;
    signal line_buffer_V_0_we1 : STD_LOGIC;
    signal window_V_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce0 : STD_LOGIC;
    signal line_buffer_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce1 : STD_LOGIC;
    signal line_buffer_V_1_we1 : STD_LOGIC;
    signal window_V_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal convolution_buffer_V_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal convolution_buffer_V_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal in_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_69 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_img_V_TDATA_blk_n : STD_LOGIC;
    signal or_cond1_reg_619 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond1_reg_619_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_170 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_reg_181 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_reg_192 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_101 : BOOLEAN;
    signal ap_sig_ioackin_out_img_V_TREADY : STD_LOGIC;
    signal indvar_flatten_next_fu_209_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_mid2_fu_221_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_mid2_reg_584 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_mid2_fu_275_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_594 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_0_addr_reg_598 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_cond_reg_609 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_temp_V_reg_613 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond1_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_313_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_556_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ioackin_out_img_V_TREADY : STD_LOGIC := '0';
    signal exitcond_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_s_fu_229_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid1_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid1_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_247_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid2_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl1_fu_344_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl2_fu_356_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl2_cast_fu_364_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl1_cast_fu_352_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_fu_368_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_566_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_401_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_1_fu_413_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_421_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl3_cast_fu_409_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_538_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_fu_456_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_fu_456_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal neg_mul_fu_462_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_2_fu_468_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_475_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_485_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_v_v_fu_495_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal neg_ti_fu_503_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_509_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_513_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_523_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_538_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_547_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_547_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_547_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_556_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_556_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_566_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_566_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_2 : STD_LOGIC;
    signal ap_sig_410 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_547_p20 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_556_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_566_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_440 : BOOLEAN;
    signal ap_sig_92 : BOOLEAN;

    component sep_convolution_filter_mac_muladd_17s_8ns_24s_24_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component sep_convolution_filter_mac_muladd_17s_6s_23s_24_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component sep_convolution_filter_mac_muladd_8ns_8s_16s_17_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component sep_convolution_filter_mac_muladd_8ns_8ns_14s_16_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component sep_convolution_filter_line_buffer_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    line_buffer_V_0_U : component sep_convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_0_address0,
        ce0 => line_buffer_V_0_ce0,
        q0 => line_buffer_V_0_q0,
        address1 => line_buffer_V_0_addr_reg_598,
        ce1 => line_buffer_V_0_ce1,
        we1 => line_buffer_V_0_we1,
        d1 => line_buffer_V_1_q0);

    line_buffer_V_1_U : component sep_convolution_filter_line_buffer_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_1_address0,
        ce0 => line_buffer_V_1_ce0,
        q0 => line_buffer_V_1_q0,
        address1 => line_buffer_V_1_address1,
        ce1 => line_buffer_V_1_ce1,
        we1 => line_buffer_V_1_we1,
        d1 => in_temp_V_reg_613);

    sep_convolution_filter_mac_muladd_17s_8ns_24s_24_1_U1 : component sep_convolution_filter_mac_muladd_17s_8ns_24s_24_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => convolution_buffer_V_2,
        din1 => grp_fu_538_p1,
        din2 => grp_fu_547_p3,
        dout => grp_fu_538_p3);

    sep_convolution_filter_mac_muladd_17s_6s_23s_24_1_U2 : component sep_convolution_filter_mac_muladd_17s_6s_23s_24_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 6,
        din2_WIDTH => 23,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_556_p3,
        din1 => grp_fu_547_p1,
        din2 => grp_fu_547_p2,
        dout => grp_fu_547_p3);

    sep_convolution_filter_mac_muladd_8ns_8s_16s_17_1_U3 : component sep_convolution_filter_mac_muladd_8ns_8s_16s_17_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_556_p0,
        din1 => grp_fu_556_p1,
        din2 => grp_fu_566_p3,
        dout => grp_fu_556_p3);

    sep_convolution_filter_mac_muladd_8ns_8ns_14s_16_1_U4 : component sep_convolution_filter_mac_muladd_8ns_8ns_14s_16_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 14,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_566_p0,
        din1 => grp_fu_566_p1,
        din2 => r_V_fu_368_p2,
        dout => grp_fu_566_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_out_img_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_92) then
                    if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                        ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_440) then 
                        ap_reg_ioackin_out_img_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((exitcond_flatten_fu_203_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((exitcond_flatten_fu_203_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                col_reg_192 <= col_1_fu_313_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                col_reg_192 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                indvar_flatten_reg_170 <= indvar_flatten_next_fu_209_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_170 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    row_reg_181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
                row_reg_181 <= row_mid2_fu_275_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                row_reg_181 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                ap_reg_ppstg_or_cond1_reg_619_pp0_iter1 <= or_cond1_reg_619;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                col_mid2_reg_584 <= col_mid2_fu_221_p3;
                or_cond1_reg_619 <= or_cond1_fu_307_p2;
                or_cond_reg_609 <= or_cond_fu_295_p2;
                tmp_4_reg_594 <= tmp_4_fu_283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                convolution_buffer_V_1 <= convolution_buffer_V_2;
                convolution_buffer_V_2 <= grp_fu_556_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_295_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then
                in_temp_V_reg_613 <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = tmp_4_fu_283_p2)))) then
                line_buffer_V_0_addr_reg_598 <= tmp_5_fu_289_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = tmp_4_reg_594)))) then
                window_V_0 <= line_buffer_V_0_q0;
                window_V_1 <= line_buffer_V_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = or_cond_reg_609)))) then
                window_V_2 <= in_temp_V_reg_613;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, exitcond_flatten_fu_203_p2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((exitcond_flatten_fu_203_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((exitcond_flatten_fu_203_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st5_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st5_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st5_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_101_assign_proc : process(in_img_V_TVALID, exitcond_flatten_fu_203_p2, or_cond_fu_295_p2)
    begin
                ap_sig_101 <= ((exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_295_p2)) and (in_img_V_TVALID = ap_const_logic_0));
    end process;


    ap_sig_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_410_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_410 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_440_assign_proc : process(out_img_V_TREADY, ap_reg_ppiten_pp0_it0, ap_sig_101)
    begin
                ap_sig_440 <= (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101)) and (ap_const_logic_1 = out_img_V_TREADY));
    end process;


    ap_sig_69_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_69 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_92_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)
    begin
                ap_sig_92 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_69)
    begin
        if (ap_sig_69) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_20)
    begin
        if (ap_sig_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_2_assign_proc : process(ap_sig_410)
    begin
        if (ap_sig_410) then 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_out_img_V_TREADY_assign_proc : process(out_img_V_TREADY, ap_reg_ioackin_out_img_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_out_img_V_TREADY)) then 
            ap_sig_ioackin_out_img_V_TREADY <= out_img_V_TREADY;
        else 
            ap_sig_ioackin_out_img_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    col_1_fu_313_p2 <= std_logic_vector(unsigned(col_mid2_fu_221_p3) + unsigned(ap_const_lv10_1));
    col_mid2_fu_221_p3 <= 
        ap_const_lv10_0 when (exitcond_fu_215_p2(0) = '1') else 
        col_reg_192;
    exitcond_flatten_fu_203_p2 <= "1" when (indvar_flatten_reg_170 = ap_const_lv19_4B461) else "0";
    exitcond_fu_215_p2 <= "1" when (col_reg_192 = ap_const_lv10_281) else "0";
    grp_fu_538_p1 <= ap_const_lv24_47(8 - 1 downto 0);
    grp_fu_547_p1 <= ap_const_lv23_7FFFEA(6 - 1 downto 0);
    grp_fu_547_p2 <= grp_fu_547_p20(23 - 1 downto 0);
    grp_fu_547_p20 <= std_logic_vector(signed(p_shl4_cast_fu_421_p1) - signed(p_shl3_cast_fu_409_p1));
    grp_fu_556_p0 <= grp_fu_556_p00(8 - 1 downto 0);
    grp_fu_556_p00 <= std_logic_vector(resize(unsigned(window_V_2),16));
    grp_fu_556_p1 <= ap_const_lv16_FF8E(8 - 1 downto 0);
    grp_fu_566_p0 <= grp_fu_566_p00(8 - 1 downto 0);
    grp_fu_566_p00 <= std_logic_vector(resize(unsigned(window_V_1),16));
    grp_fu_566_p1 <= ap_const_lv16_43(8 - 1 downto 0);

    in_img_V_TDATA_blk_n_assign_proc : process(in_img_V_TVALID, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, exitcond_flatten_fu_203_p2, or_cond_fu_295_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_295_p2)))) then 
            in_img_V_TDATA_blk_n <= in_img_V_TVALID;
        else 
            in_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_img_V_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, exitcond_flatten_fu_203_p2, or_cond_fu_295_p2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_203_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = or_cond_fu_295_p2)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            in_img_V_TREADY <= ap_const_logic_1;
        else 
            in_img_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_209_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_170) + unsigned(ap_const_lv19_1));
    line_buffer_V_0_address0 <= tmp_5_fu_289_p1(10 - 1 downto 0);

    line_buffer_V_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY, tmp_4_reg_594)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = tmp_4_reg_594))))) then 
            line_buffer_V_0_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_address0 <= tmp_5_fu_289_p1(10 - 1 downto 0);
    line_buffer_V_1_address1 <= tmp_8_fu_336_p1(10 - 1 downto 0);

    line_buffer_V_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_sig_ioackin_out_img_V_TREADY, or_cond_reg_609)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and (ap_const_logic_0 = ap_sig_ioackin_out_img_V_TREADY)))) and not((ap_const_lv1_0 = or_cond_reg_609))))) then 
            line_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_fu_456_p0 <= grp_fu_538_p3;
    mul_fu_456_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(mul_fu_456_p0) * signed('0' &ap_const_lv48_1020409))), 48));
    neg_mul_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(mul_fu_456_p2));
    neg_ti_fu_503_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(p_v_v_fu_495_p3));
    or_cond1_fu_307_p2 <= (tmp_2_mid2_fu_267_p3 and tmp_9_fu_301_p2);
    or_cond_fu_295_p2 <= (tmp_4_fu_283_p2 and tmp_mid2_fu_247_p3);
    out_img_V_TDATA <= std_logic_vector(unsigned(tmp_12_fu_523_p3) + unsigned(ap_const_lv8_3F));

    out_img_V_TDATA_blk_n_assign_proc : process(out_img_V_TREADY, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)))) then 
            out_img_V_TDATA_blk_n <= out_img_V_TREADY;
        else 
            out_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_img_V_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond1_reg_619_pp0_iter1, ap_sig_101, ap_reg_ioackin_out_img_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_619_pp0_iter1)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_101)) and (ap_const_logic_0 = ap_reg_ioackin_out_img_V_TREADY))) then 
            out_img_V_TVALID <= ap_const_logic_1;
        else 
            out_img_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_shl1_cast_fu_352_p1 <= std_logic_vector(resize(unsigned(p_shl1_fu_344_p3),14));
    p_shl1_fu_344_p3 <= (window_V_0 & ap_const_lv5_0);
    p_shl2_cast_fu_364_p1 <= std_logic_vector(resize(unsigned(p_shl2_fu_356_p3),14));
    p_shl2_fu_356_p3 <= (window_V_0 & ap_const_lv3_0);
        p_shl3_cast_fu_409_p1 <= std_logic_vector(resize(signed(tmp_fu_401_p3),24));

        p_shl4_cast_fu_421_p1 <= std_logic_vector(resize(signed(tmp_1_fu_413_p3),24));

    p_v_v_fu_495_p3 <= 
        tmp_3_fu_475_p4 when (tmp_2_fu_468_p3(0) = '1') else 
        tmp_6_fu_485_p4;
    r_V_fu_368_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_364_p1) - unsigned(p_shl1_cast_fu_352_p1));
    row_mid2_fu_275_p3 <= 
        row_s_fu_229_p2 when (exitcond_fu_215_p2(0) = '1') else 
        row_reg_181;
    row_s_fu_229_p2 <= std_logic_vector(unsigned(row_reg_181) + unsigned(ap_const_lv9_1));
    tmp6_fu_241_p2 <= "1" when (unsigned(row_reg_181) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_10_fu_509_p1 <= neg_ti_fu_503_p2(8 - 1 downto 0);
    tmp_11_fu_513_p4 <= mul_fu_456_p2(38 downto 31);
    tmp_12_fu_523_p3 <= 
        tmp_10_fu_509_p1 when (tmp_2_fu_468_p3(0) = '1') else 
        tmp_11_fu_513_p4;
    tmp_1_fu_413_p3 <= (convolution_buffer_V_1 & ap_const_lv3_0);
    tmp_2_fu_468_p3 <= grp_fu_538_p3(23 downto 23);
    tmp_2_mid1_fu_255_p2 <= "0" when (row_s_fu_229_p2 = ap_const_lv9_0) else "1";
    tmp_2_mid2_fu_267_p3 <= 
        tmp_2_mid1_fu_255_p2 when (exitcond_fu_215_p2(0) = '1') else 
        tmp_s_fu_261_p2;
    tmp_3_fu_475_p4 <= neg_mul_fu_462_p2(47 downto 31);
    tmp_4_fu_283_p2 <= "1" when (unsigned(col_mid2_fu_221_p3) < unsigned(ap_const_lv10_280)) else "0";
    tmp_5_fu_289_p1 <= std_logic_vector(resize(unsigned(col_mid2_fu_221_p3),64));
    tmp_6_fu_485_p4 <= mul_fu_456_p2(47 downto 31);
    tmp_8_fu_336_p1 <= std_logic_vector(resize(unsigned(col_mid2_reg_584),64));
    tmp_9_fu_301_p2 <= "0" when (col_mid2_fu_221_p3 = ap_const_lv10_0) else "1";
    tmp_fu_401_p3 <= (convolution_buffer_V_1 & ap_const_lv5_0);
    tmp_mid1_fu_235_p2 <= "1" when (unsigned(row_s_fu_229_p2) < unsigned(ap_const_lv9_1E0)) else "0";
    tmp_mid2_fu_247_p3 <= 
        tmp_mid1_fu_235_p2 when (exitcond_fu_215_p2(0) = '1') else 
        tmp6_fu_241_p2;
    tmp_s_fu_261_p2 <= "0" when (row_reg_181 = ap_const_lv9_0) else "1";
end behav;
